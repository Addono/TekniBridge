image: python:3.7

stages:
  - static-code-analysis
  - deploy

variables:
  INSTALL_DIR: "/usr/bin/teknibridge"

type-checking:
  stage: static-code-analysis
  script:
    - pip install pyre-check
    - pip install -r requirements-prod.txt -r requirements.txt
    - pyre --source-directory src/ --noninteractive check
  allow_failure: true

run:
  stage: deploy
  environment:
    name: production
  script:
    # Install Python3 in case it is not yet installed
    - (python3 -V) || sudo apt-get install python3 python3-pip -y
    # First try to load the current venv, otherwise create a new one
    - $INSTALL_DIR/venv/bin/python3 -V || (sudo apt-get install python3-venv -y && python3 -m venv $INSTALL_DIR/venv)
    # Install requirements
    - $INSTALL_DIR/venv/bin/python3 -m pip install -r requirements-prod.txt -r requirements.txt
    # Copy the source code
    - sudo cp -r . $INSTALL_DIR
    # Remove all compiled Python code
    - sudo find $INSTALL_DIR -name '*.pyc' -delete
    # Update the service
    - |
        sudo echo "
            [Unit]
            Description=Teknibridge Service
            After=multi-user.target
            Conflicts=getty@tty1.service

            [Service]
            Type=simple
            Restart=on-failure
            ExecStart=/usr/bin/teknibridge/venv/bin/python3 $INSTALL_DIR/src/cli.py
            StandardInput=tty-force

            [Install]
            WantedBy=multi-user.target" > /lib/systemd/system/teknibridge.service
    # Reload the daemon
    - sudo systemctl daemon-reload
    # Enable and restart the service
    - sudo systemctl restart teknibridge
    - sudo systemctl enable teknibridge
    # Check if the service didn't exit immediately
    - sleep 1 && systemctl is-active --quiet teknibridge
  only:
    - master
  tags:
    - production
