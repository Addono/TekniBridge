variables:
  INSTALL_DIR: "/usr/bin/teknibridge"

run:
  stage: deploy
  environment:
    name: production
  script:
    # Install dependencies in case they are not yet installed.
    - sudo apt-get install python3 python3-pip -y
    # Print out python version for debugging
    - python3 -V
    # First try to load the current venv, otherwise install a new one
    - ($INSTALL_DIR/venv/bin/python3 -m pip install -r requirements-prod.txt -r requirements.txt)
      || (pip3 install virtualenv && virtualenv -p python3 $INSTALL_DIR/venv && $INSTALL_DIR/venv/bin/python3 -m pip install -r requirements-prod.txt -r requirements.txt)
    # Copy the source code
    - sudo cp -r . $INSTALL_DIR
    # Update the service
    - |
        sudo echo "
            [Unit]
            Description=Teknibridge Service
            After=multi-user.target
            Conflicts=getty@tty1.service

            [Service]
            Type=simple
            Restart=on-failure
            ExecStart=/usr/bin/teknibridge/venv/bin/python3 $INSTALL_DIR/src/cli.py
            StandardInput=tty-force

            [Install]
            WantedBy=multi-user.target" > /lib/systemd/system/teknibridge.service
    # Reload the daemon
    - sudo systemctl daemon-reload
    # Enable and restart the service
    - sudo systemctl restart teknibridge
    - sudo systemctl enable teknibridge
    # Check if the service didn't exit immediately
    - sleep 1 && systemctl is-active --quiet teknibridge
  only:
    - master
  tags:
    - production
